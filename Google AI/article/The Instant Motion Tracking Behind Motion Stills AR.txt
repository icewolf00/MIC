The Instant Motion Tracking Behind Motion Stills ARPosted by Jianing Wei and Tyler Mullen, Software Engineers, Google ResearchLast summer, we launched Motion Stills on Android, which delivered a great video capture and viewing experience on a wide range of Android phones. Then, we refined our Motion Stills technology further to enable the new motion photos feature in Pixel 2.Today, we are excited to announce the new Augmented Reality (AR) mode in Motion Stills for Android. With the new AR mode, a user simply touches the viewfinder to place fun, virtual 3D objects on static or moving horizontal surfaces (e.g. tables, floors, or hands), allowing them to seamlessly interact with a dynamic real-world environment. You can also record and share the clips as GIFs and videos. Motion Stills with instant motion tracking in actionAR mode is powered by instant motion tracking, a six degree of freedom tracking system built upon the technology that powers Motion Text in Motion Stills iOS and the privacy blur on YouTube to accurately track static and moving objects. We refined and enhanced this technology to enable fun AR experiences that can run on any Android device with a gyroscope.When you touch the viewfinder, Motion Stills AR "sticks" a 3D virtual object to that location, making it look as if it's part of the real-world scene. By assuming that the tracked surface is parallel to the ground plane, and using the device's accelerometer sensor to provide the initial orientation of the phone with respect to the ground plane, one can track the six degrees of freedom of the camera (3 for translation and 3 for rotation). This allows us to accurately transform and render the virtual object within the scene.When the phone is approximately steady, the accelerometer sensor provides the acceleration due to the Earth's gravity. For horizontal planes the gravity vector is parallel to normal of the tracked plane and can accurately provide the initial orientation of phone.Instant Motion TrackingThe core idea behind instant motion tracking is to decouple the camera's translation and rotation estimation, treating them instead as independent optimization problems. First, we determine the 3D camera translation solely from the visual signal of the camera. To do this, we observe the target region's apparent 2D translation and relative scale across frames. A simple pinhole camera model relates both translation and scale of a box in the image plane with the final 3D translation of the camera.The translation and the change in size (relative scale) of the box in the image plane can be used to determine 3D translation between two camera position C1 and C2. However, as our camera model doesn't assume the focal length of the camera lens, we do not know the true distance/depth of the tracked plane.To account for this, we added scale estimation to our existing tracker (the one used in Motion Text) as well as region tracking outside the field of view of the camera. When the camera gets closer to the tracked surface, the virtual content scales accurately, which is consistent with perception of real-world objects. When you pan outside the field of view of the target region and back the virtual object will reappear in approximately the same spot.Independent translation (from visual signal only as shown by red box) and rotation tracking (from gyro; not shown)After all this, we obtain the device's 3D rotation (roll, pitch and yaw) using the phone's built-in gyroscope. The estimated 3D translation combined with the 3D rotation provides us with the ability to render the virtual content correctly in the viewfinder. And because we treat rotation and translation separately, our instant motion tracking approach is calibration free and works on any Android device with a gyroscope.Augmented chicken family with Motion Stills AR modeWe are excited to bring this new mode to Motion Stills for Android, and we hope you'll enjoy it.  Please download the new release of Motion Stills and keep sending us feedback with #motionstills on your favorite social media.AcknowledgementsFor rendering, we are thankful we were able to leverage Google's Lullaby engine using animated Poly models. A thank you to our team members who worked on the tech and this launch with us: John Nack, Suril Shah, Igor Kibalchich, Siarhei Kazakou, and Matthias Grundmann.